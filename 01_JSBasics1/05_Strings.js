// ----------------------------------------
// üéì Lesson 05 ‚Äì Strings in JavaScript
// ----------------------------------------

// 1Ô∏è‚É£ String Declaration

// ‚úÖ Using const for immutable reference
const name = "john";
const repoCount = 50;

// ‚úÖ Concatenation using +
console.log(name + repoCount + " Value"); 
// Output: "john50 Value"

// ‚úÖ Template literals using backticks (recommended)
console.log(`Hello my name is ${name} and my repo count is ${repoCount}`); 
// Output: "Hello my name is john and my repo count is 50"


// 2Ô∏è‚É£ Creating String Object

// ‚úÖ String constructor creates an object
const gameName = new String('john-hc-com');

// Accessing characters by index
console.log(gameName[0]);        // "j"

// __proto__ gives access to string methods
console.log(gameName.__proto__); 

// Length property
console.log(gameName.length);    // 11

// Convert to uppercase
console.log(gameName.toUpperCase()); // "JOHN-HC-COM"

// Character at index
console.log(gameName.charAt(2));     // "h"

// Index of character (returns -1 if not found)
console.log(gameName.indexOf('t'));  // -1


// 3Ô∏è‚É£ Substring and Slice

// substring(start, end): extracts from start to end (end not included)
const newString = gameName.substring(0, 4);
console.log(newString); // "john"

// slice(start, end): supports negative indices
const anotherString = gameName.slice(-8, 4);
console.log(anotherString); // "" (because start index > end index)


// 4Ô∏è‚É£ Trimming Whitespace

const newStringOne = "   john   ";
console.log(newStringOne);            // "   john   "
console.log(newStringOne.trim());     // "john"


// 5Ô∏è‚É£ Replace, Includes, Split

const url = "https://google.com/google%20docs";

// replace(old, new): replaces first occurrence
console.log(url.replace('%20', '-')); 
// "https://google.com/google-docs"

// includes(substring): checks if substring exists
console.log(url.includes('gmail'));   
// false

// split(separator): splits string into array
console.log(gameName.split('-'));     
// ["john", "hc", "com"]


// 6Ô∏è‚É£ String Methods Quick Reference and Examples

/*
.toUpperCase() ‚Äì Convert to uppercase
.toLowerCase() ‚Äì Convert to lowercase
.charAt(i) ‚Äì Character at position i
.indexOf() ‚Äì Index of character
.substring() ‚Äì Extract substring
.slice() ‚Äì Extract slice (supports negative indices)
.trim() ‚Äì Remove whitespace
.replace() ‚Äì Replace substring
.includes() ‚Äì Check if substring exists
.split() ‚Äì Split into array
*/


// 7Ô∏è‚É£ Important Interview Questions

// ‚úÖ Q1: How do you convert a string to uppercase?
// "hello".toUpperCase(); // "HELLO"

// ‚úÖ Q2: Difference between slice and substring?
// slice allows negative indices, substring does not:
// "abcdef".slice(-3); // "def"
// "abcdef".substring(-3); // "abcdef"

// ‚úÖ Q3: How to check if a string contains a substring?
// "javascript".includes("script"); // true

// ‚úÖ Q4: How to remove whitespace from both ends?
// " hello ".trim(); // "hello"

// ‚úÖ Q5: What does split return?
// "red,green,blue".split(","); // ["red","green","blue"]

// ‚úÖ Q6: Difference between string literal and new String()?
// typeof "hello"; // "string"
// typeof new String("hi"); // "object"

// ‚úÖ Q7: What if indexOf() doesn‚Äôt find a character?
// Returns -1:
// "abc".indexOf("z"); // -1
